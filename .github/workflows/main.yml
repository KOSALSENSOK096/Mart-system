name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.8.18'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          check-latest: true
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
        continue-on-error: true
          
      - name: Create environment file
        run: |
          echo "PYTHON_VERSION=${{ env.PYTHON_VERSION }}" > .env
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip --no-cache-dir
          pip install --no-cache-dir wheel setuptools
          if [ -f requirements.txt ]; then
            pip install --no-cache-dir -r requirements.txt
          fi
        
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          if [ -d tests ]; then
            python -m pytest tests/ --cache-clear
          fi
        
      - name: Build and verify
        run: |
          echo "Building and verifying project..."
          python -c "import sys; print(f'Python {sys.version}')"
          python -c "import platform; print(f'Platform: {platform.platform()}')"
          
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: mart-system-${{ github.sha }}
          path: |
            .
            !.git
            !.github
            !tests
            !**/__pycache__
            !**.pyc
          retention-days: 5
        
      - name: Cleanup
        if: always()
        run: |
          rm -rf ~/.cache/pip 